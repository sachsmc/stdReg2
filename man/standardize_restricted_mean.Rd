% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standardize_custom.R
\name{standardize_restricted_mean}
\alias{standardize_restricted_mean}
\title{Get the causal mean restricted survival time using the g-formula with a custom model}
\usage{
standardize_restricted_mean(
  arguments,
  fitter,
  time_grid,
  predict_fun,
  data,
  values
)
}
\arguments{
\item{arguments}{The arguments to be used in the fitter function as a \code{list}.}

\item{fitter}{The function to call to fit the data.}

\item{time_grid}{The time grid to be used for numerical integration.}

\item{predict_fun}{The function used to predict the means/probabilities
for a new data set on the response level. For survival data,
this should be a matrix where each column is the time, and each
row the data.}

\item{data}{The data used.}

\item{values}{A named list or data.frame specifying the variables and values
at which marginal means of the outcome will be estimated.}
}
\value{
An object of class \code{std_helper}.
This is basically a list with components estimates and fit for the outcome model.
}
\description{
Get the causal mean restricted survival time using the g-formula with a custom model
}
\details{
Let \eqn{Y}, \eqn{X}, and \eqn{Z} be the outcome, the exposure, and a
vector of covariates, respectively.
\code{standardize} uses a
model to estimate the standardized
mean \eqn{\theta(x)=\int_0^L E\{E(I(T > u)|X=x,Z)\}} du,
where \eqn{x} is a specific value of \eqn{X},
and the outer expectation is over the marginal distribution of \eqn{Z}, where \eqn{T}
is the uncensored survival time. Here \eqn{L} is end-of-study specified as the last
time point in \code{time_grid}. The integral is approximated by a \code{time_grid}.
}
\examples{

library(survival)
prob_predict.coxph <- function(...) 1 - riskRegression::predictRisk(...)
set.seed(6)
n <- 500
Z <- rnorm(n)
X <- rnorm(n, mean = Z)
T <- rexp(n, rate = exp(X + Z + X * Z)) # survival time
C <- rexp(n, rate = exp(X + Z + X * Z)) # censoring time
U <- pmin(T, C) # time at risk
D <- as.numeric(T < C) # event indicator
dd <- data.frame(Z, X, U, D)
x <- standardize_restricted_mean(
  arguments = list(
    formula = Surv(U, D) ~ X + Z + X * Z,
    method = "breslow",
    x = TRUE,
    y = TRUE
  ),
  fitter = "coxph",
  data = dd,
  time_grid = seq(0, 5, 0.001)[-1],
  predict_fun = prob_predict.coxph,
  values = list(X = 0.5)
)
}
